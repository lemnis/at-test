# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Tests

defaults:
  run:
    working-directory: .

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  webkit:
    name: Webkit with VoiceOver
    runs-on: macos-12

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npx playwright install webkit
    - run: npm install
    - run: node scripts/update-codecept-default-helpers.mjs
    - run: npx @guidepup/setup --ci
    - run: REPORT=true npm run test:voiceover:webkit
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: Webkit with VoiceOver
        path: output/voiceover-webkit
    
  safari:
    name: Safari with VoiceOver
    runs-on: macos-12

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm install webdriverio
    - run: node scripts/update-codecept-default-helpers.mjs
    - run: npx @guidepup/setup --ci
    - run: |
        sudo safaridriver --enable
        safaridriver -p 4444 &
    - run: REPORT=true npm run test:voiceover:safari
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: Safari with VoiceOver
        path: output/voiceover-safari
    
  chromium:
    name: Chromium with VoiceOver
    runs-on: macos-12

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npx playwright install chromium
    - run: npm install
    - run: node scripts/update-codecept-default-helpers.mjs
    - run: npx @guidepup/setup --ci
    - run: REPORT=true npm run test:voiceover:chromium
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: Chromium with VoiceOver
        path: output/voiceover-chromium
  
  firefox:
    name: Firefox with VoiceOver
    runs-on: macos-12

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npx playwright install firefox
    - run: npm install
    - run: node scripts/update-codecept-default-helpers.mjs
    - run: npx @guidepup/setup --ci
    - run: REPORT=true npm run test:voiceover:firefox
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: Firefox with VoiceOver
        path: output/voiceover-firefox

  PlaywrightMacOs:
    runs-on: macos-latest
    name: Playwright on MacOs
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npx playwright install
    - run: npm install
    - run: REPORT=true npx npm-run-all -c --parallel test:webkit test:chromium test:firefox 
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: Playwright on MacOs
        path: output/playwright-*/darwin-*-latest.json
  
  PlaywrightWindows:
    runs-on: windows-latest
    name: Playwright on Windows
    strategy:
      matrix:
        node-version: [14.x]
    outputs:
      result: ${{ steps.result.outputs.test }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npx playwright install
      - run: npm install
      - run: REPORT=true npx npm-run-all -c --parallel test:webkit test:chromium test:firefox
        shell: bash
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: Playwright on Windows
          path: output/playwright-*/win32-*-latest.json
  
  PlaywrightUbuntu:
    runs-on: ubuntu-latest
    name: Playwright on Ubuntu
    strategy:
      matrix:
        node-version: [14.x]
    outputs:
      result: ${{ steps.result.outputs.test }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npx playwright install
      - run: npm install
      - run: REPORT=true npx npm-run-all -c --parallel test:webkit test:chromium test:firefox
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: Playwright on Ubuntu
          path: output/playwright-*/linux-*-latest.json
